on:
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_AKS_CLUSTER_NAME: ${{ vars.AZURE_AKS_CLUSTER_NAME }}
      APPLICATIONINSIGHTS_ROLE_NAME: ${{ vars.APPLICATIONINSIGHTS_ROLE_NAME }}
      AZURE_PRINCIPAL_TYPE: ${{ vars.AZURE_PRINCIAPL_TYPE }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_SP_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_SP_TENANT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_SP_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}
      AZURE_AKS_IDENTITY_CLIENT_ID: ${{ secrets.AZURE_AKS_IDENTITY_CLIENT_ID }}
      AZURE_CONTAINER_REGISTRY_ENDPOINT: ${{ secrets.AZURE_CONTAINER_REGISTRY_ENDPOINT }}
      AZURE_CONTAINER_REGISTRY_NAME: ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Required if not installed in base image
      - name: Install kubectl
        uses: Azure/setup-kubectl@v3

      # Required if deploying Helm charts with Azd and not already installed in base image
      - name: Install Helm
        uses: azure/setup-helm@v4.2.0

      # Required if deploying with Kustomize and not already installed in base image
      - name: Install Kustomize
        uses: syntaqx/setup-kustomize@v1

      # Required if using Azure RBAC enabled AKS cluster with Azd
      - name: Install Kubelogin
        uses: Azure/use-kubelogin@v1
        with:
          kubelogin-version: "v0.1.3"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ vars.AZURE_AKS_CLUSTER_NAME }}

      - name: Create Kubernetes Secret in Namespace
        uses: azure/k8s-create-secret@v4
        with:
          namespace: '${{ secrets.AZURE_AKS_DEMO_APP_NAMESPACE }}'
          secret-type: 'opaque'
          secret-name: 'todo-api-secret'
          string-data: '{"AZURE_COSMOS_CONNECTION_STRING": "${{ secrets.AZURE_COSMOS_CONNECTION_STRING }}", "AZURE_CLIENT_ID": "${{ secrets.AZURE_CLIENT_ID }}", "AZURE_CLIENT_SECRET": "${{ secrets.AZURE_CLIENT_SECRET }}"}'

      # Required if using alpha AKS features for Helm or Kustomize
      - name: Configure Azd
        run: |
          azd config set alpha.aks.helm on
          azd config set alpha.aks.kustomize on
        shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)";
          azd config set defaults.subscription "$($info.subscriptionId)";
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Provision Infrastructure
        run: |
          azd provision --no-prompt
        env:
          AZURE_PRINCIPAL_ID: ${{ secrets.AZURE_SP_CLIENT_ID }}
      - name: Show env vars (DEBUG)
        run: env | sort
      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_CONTAINER_REGISTRY_ENDPOINT: ${{ vars.AZURE_CONTAINER_REGISTRY_ENDPOINT }}
          AZURE_CONTAINER_REGISTRY_NAME: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
          AZURE_COSMOS_CONNECTION_STRING: ${{ secrets.AZURE_COSMOS_CONNECTION_STRING }}
      - name: Show env vars (DEBUG)
        run: env | sort
